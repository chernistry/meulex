[tool.poetry]
name = "meulex"
version = "0.1.0"
description = "Slack-native, compliance-aware agentic RAG copilot"
authors = ["Meulex Team <team@meulex.ai>"]
readme = "README.md"
packages = [{include = "meulex"}]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.0"
uvicorn = {extras = ["standard"], version = "^0.32.0"}
pydantic = "^2.10.0"
pydantic-settings = "^2.6.0"
httpx = "^0.28.0"
redis = "^5.2.0"
qdrant-client = "^1.15.0"
openai = "^1.58.0"
tenacity = "^9.0.0"
typer = "^0.15.0"
rich = "^13.9.0"
prometheus-client = "^0.21.0"
opentelemetry-api = "^1.36.0"
opentelemetry-sdk = "^1.36.0"
opentelemetry-instrumentation-fastapi = "^0.47b0"
opentelemetry-instrumentation-httpx = "^0.47b0"
opentelemetry-instrumentation-redis = "^0.47b0"
opentelemetry-exporter-prometheus = "^0.47b0"
python-multipart = "^0.0.17"
jinja2 = "^3.1.4"
numpy = "^2.0.0"
scikit-learn = "^1.5.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.0"
pytest-asyncio = "^0.25.0"
pytest-cov = "^6.0.0"
pytest-mock = "^3.14.0"
black = "^24.10.0"
isort = "^5.13.0"
mypy = "^1.13.0"
pre-commit = "^4.0.0"

[tool.poetry.scripts]
meulex = "meulex.cli.main:app"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["meulex"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "qdrant_client.*",
    "redis.*",
    "prometheus_client.*",
    "opentelemetry.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=meulex --cov-report=term-missing --cov-report=html --cov-fail-under=85"
testpaths = [
    "meulex/tests",
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["meulex"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
